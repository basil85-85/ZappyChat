<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Verify Your Account - ZappyChat</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #333;
            padding: 20px;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 25px;
            padding: 40px;
            box-shadow: 0 30px 60px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 500px;
            text-align: center;
            animation: slideUp 0.8s ease-out;
        }

        .logo {
            font-size: 2.5rem;
            font-weight: bold;
            color: #4c63d2;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .zap-icon {
            animation: zap 2s ease-in-out infinite;
        }

        .header {
            margin-bottom: 30px;
        }

        .title {
            font-size: 2rem;
            color: #333;
            margin-bottom: 10px;
            font-weight: 600;
        }

        .subtitle {
            color: #666;
            font-size: 1.1rem;
            line-height: 1.5;
            margin-bottom: 20px;
        }

        .sent-to {
            background: rgba(76, 99, 210, 0.1);
            color: #4c63d2;
            padding: 10px 20px;
            border-radius: 25px;
            font-weight: 500;
            display: inline-block;
            margin-bottom: 30px;
        }

        .verification-form {
            margin-bottom: 30px;
        }

        .code-inputs {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-bottom: 30px;
        }

        .code-input {
            width: 60px;
            height: 60px;
            border: 3px solid #e1e5e9;
            border-radius: 12px;
            font-size: 24px;
            font-weight: bold;
            text-align: center;
            outline: none;
            transition: all 0.3s ease;
            background: white;
        }

        .code-input:focus {
            border-color: #4c63d2;
            box-shadow: 0 0 0 3px rgba(76, 99, 210, 0.1);
            transform: scale(1.05);
        }

        .code-input.filled {
            background: #4c63d2;
            color: white;
            border-color: #4c63d2;
        }

        .code-input.error {
            border-color: #dc3545;
            background: rgba(220, 53, 69, 0.1);
            animation: shake 0.5s ease-in-out;
        }

        .verify-btn {
            width: 100%;
            padding: 15px;
            background: #4c63d2;
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 10px 20px rgba(76, 99, 210, 0.3);
        }

        .verify-btn:hover:not(:disabled) {
            background: #3b4fcf;
            transform: translateY(-2px);
            box-shadow: 0 15px 30px rgba(76, 99, 210, 0.4);
        }

        .verify-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .timer {
            font-size: 1.1rem;
            color: #666;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .timer.warning {
            color: #ff6b6b;
        }

        .resend-section {
            padding-top: 20px;
            border-top: 1px solid #e1e5e9;
        }

        .resend-text {
            color: #666;
            margin-bottom: 15px;
        }

        .resend-btn {
            background: transparent;
            color: #4c63d2;
            border: 2px solid #4c63d2;
            padding: 12px 25px;
            border-radius: 25px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .resend-btn:hover:not(:disabled) {
            background: #4c63d2;
            color: white;
            transform: scale(1.05);
        }

        .resend-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }

        .success {
            background: rgba(40, 167, 69, 0.1);
            color: #28a745;
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            font-weight: 500;
        }

        .error {
            background: rgba(220, 53, 69, 0.1);
            color: #dc3545;
            padding: 15px;
            border-radius: 12px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            font-weight: 500;
        }

        .help-text {
            color: #888;
            font-size: 0.9rem;
            margin-top: 20px;
            line-height: 1.5;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes zap {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.2); }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }

        .loading {
            animation: pulse 1s ease-in-out infinite;
        }

        @media (max-width: 600px) {
            .container {
                padding: 30px 20px;
            }

            .code-inputs {
                gap: 10px;
            }

            .code-input {
                width: 50px;
                height: 50px;
                font-size: 20px;
            }

            .logo {
                font-size: 2rem;
            }

            .title {
                font-size: 1.5rem;
            }
        }

        .icon {
            width: 20px;
            height: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">
            <span class="zap-icon">âš¡</span>
            ZappyChat
        </div>

        <div class="header">
            <h1 class="title">Verify Your Account</h1>
            <p class="subtitle">
                We've sent a 6-digit verification code to your email address
            </p>
            <div class="sent-to" id="emailDisplay">
                user@example.com
            </div>
        </div>

        <div id="messageArea"></div>

        <form class="verification-form" id="verificationForm">
            <div class="code-inputs">
                <input type="text" class="code-input" maxlength="1" id="digit1" autocomplete="off">
                <input type="text" class="code-input" maxlength="1" id="digit2" autocomplete="off">
                <input type="text" class="code-input" maxlength="1" id="digit3" autocomplete="off">
                <input type="text" class="code-input" maxlength="1" id="digit4" autocomplete="off">
                <input type="text" class="code-input" maxlength="1" id="digit5" autocomplete="off">
                <input type="text" class="code-input" maxlength="1" id="digit6" autocomplete="off">
            </div>

            <div class="timer" id="timer">
                <svg class="icon" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"></path>
                </svg>
                Code expires in: <span id="countdown">05:00</span>
            </div>

            <button type="submit" class="verify-btn" id="verifyBtn" disabled>
                Verify Account
            </button>
        </form>

        <div class="resend-section">
            <p class="resend-text">Didn't receive the code?</p>
            <button type="button" class="resend-btn" id="resendBtn" disabled>
                Resend Code
            </button>
        </div>

        <p class="help-text">
            Check your spam folder if you don't see the email. The code is valid for 5 minutes.
        </p>
    </div>

    <script>
        let timeLeft = 300; // 5 minutes in seconds
        let timerInterval;
        let resendCooldown = 60; // 1 minute cooldown
        let resendInterval;

        const inputs = document.querySelectorAll('.code-input');
        const verifyBtn = document.getElementById('verifyBtn');
        const resendBtn = document.getElementById('resendBtn');
        const countdown = document.getElementById('countdown');
        const timer = document.getElementById('timer');
        const messageArea = document.getElementById('messageArea');
        const form = document.getElementById('verificationForm');

        // Initialize
        startTimer();
        startResendCooldown();

        // Input handling
        inputs.forEach((input, index) => {
            input.addEventListener('input', function(e) {
                const value = e.target.value;
                
                // Only allow numbers
                if (!/^\d$/.test(value) && value !== '') {
                    e.target.value = '';
                    return;
                }

                if (value) {
                    e.target.classList.add('filled');
                    // Move to next input
                    if (index < inputs.length - 1) {
                        inputs[index + 1].focus();
                    }
                } else {
                    e.target.classList.remove('filled');
                }

                checkFormValidity();
                clearErrors();
            });

            input.addEventListener('keydown', function(e) {
                // Handle backspace
                if (e.key === 'Backspace' && !e.target.value && index > 0) {
                    inputs[index - 1].focus();
                    inputs[index - 1].value = '';
                    inputs[index - 1].classList.remove('filled');
                    checkFormValidity();
                }

                // Handle paste
                if (e.key === 'v' && (e.ctrlKey || e.metaKey)) {
                    setTimeout(() => handlePaste(e.target), 10);
                }
            });

            input.addEventListener('focus', function() {
                clearErrors();
            });
        });

        function handlePaste(startInput) {
            navigator.clipboard.readText().then(text => {
                const code = text.replace(/\D/g, '').slice(0, 6);
                if (code.length === 6) {
                    inputs.forEach((input, index) => {
                        input.value = code[index] || '';
                        if (code[index]) {
                            input.classList.add('filled');
                        }
                    });
                    checkFormValidity();
                }
            }).catch(err => {
                console.log('Paste failed:', err);
            });
        }

        function checkFormValidity() {
            const allFilled = Array.from(inputs).every(input => input.value);
            verifyBtn.disabled = !allFilled;
        }

        function clearErrors() {
            inputs.forEach(input => {
                input.classList.remove('error');
            });
            const errorMsg = document.querySelector('.error');
            if (errorMsg) {
                errorMsg.remove();
            }
        }

        function showMessage(message, type) {
            messageArea.innerHTML = `
                <div class="${type}">
                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="${type === 'success' ? 
                            'M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z' : 
                            'M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z'}" clip-rule="evenodd"></path>
                    </svg>
                    ${message}
                </div>
            `;
        }

        function startTimer() {
            timerInterval = setInterval(() => {
                timeLeft--;
                
                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;
                countdown.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                
                if (timeLeft <= 60) {
                    timer.classList.add('warning');
                }
                
                if (timeLeft <= 0) {
                    clearInterval(timerInterval);
                    countdown.textContent = 'EXPIRED';
                    verifyBtn.disabled = true;
                    verifyBtn.textContent = 'Code Expired';
                    showMessage('Verification code has expired. Please request a new one.', 'error');
                }
            }, 1000);
        }

        function startResendCooldown() {
            resendBtn.disabled = true;
            let cooldownLeft = resendCooldown;
            
            resendInterval = setInterval(() => {
                resendBtn.textContent = `Resend Code (${cooldownLeft}s)`;
                cooldownLeft--;
                
                if (cooldownLeft < 0) {
                    clearInterval(resendInterval);
                    resendBtn.disabled = false;
                    resendBtn.textContent = 'Resend Code';
                }
            }, 1000);
        }

        // Form submission
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const code = Array.from(inputs).map(input => input.value).join('');
            verifyBtn.classList.add('loading');
            verifyBtn.textContent = 'Verifying...';
            verifyBtn.disabled = true;
            
            // Simulate verification (replace with actual API call)
            setTimeout(() => {
                // For demo purposes, let's say '123456' is the correct code
                if (code === '123456') {
                    showMessage('Account verified successfully! Redirecting...', 'success');
                    clearInterval(timerInterval);
                    setTimeout(() => {
                        // Redirect to dashboard or login page
                        showMessage('Welcome to ZappyChat!', 'success');
                    }, 2000);
                } else {
                    showMessage('Invalid verification code. Please try again.', 'error');
                    inputs.forEach(input => {
                        input.classList.add('error');
                        input.value = '';
                        input.classList.remove('filled');
                    });
                    inputs[0].focus();
                    verifyBtn.disabled = true;
                }
                
                verifyBtn.classList.remove('loading');
                verifyBtn.textContent = 'Verify Account';
                checkFormValidity();
            }, 2000);
        });

        // Resend code
        resendBtn.addEventListener('click', function() {
            showMessage('New verification code sent to your email!', 'success');
            
            // Reset timer
            clearInterval(timerInterval);
            timeLeft = 300;
            timer.classList.remove('warning');
            startTimer();
            
            // Reset resend cooldown
            startResendCooldown();
            
            // Clear form
            inputs.forEach(input => {
                input.value = '';
                input.classList.remove('filled', 'error');
            });
            verifyBtn.disabled = true;
            verifyBtn.textContent = 'Verify Account';
            inputs[0].focus();
        });

        // Auto-focus first input
        inputs[0].focus();

        // Prevent form submission on Enter in input fields
        inputs.forEach(input => {
            input.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    if (!verifyBtn.disabled) {
                        form.dispatchEvent(new Event('submit'));
                    }
                }
            });
        });
    </script>
</body>
</html>