<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>ZappyChat - Secure Phone Login</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <!-- Firebase v9 compat SDK (required for firebase.auth()) -->
  <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.22.2/firebase-auth-compat.js"></script>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

  
  <style>
    :root {
      --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      --card-shadow: 0 15px 35px rgba(0,0,0,0.1);
      --success-color: #10b981;
      --error-color: #ef4444;
      --warning-color: #f59e0b;
    }

    * {
      box-sizing: border-box;
    }

    body {
      background: var(--primary-gradient);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      padding: 20px;
      margin: 0;
    }

    .login-container {
      width: 100%;
      max-width: 420px;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      border-radius: 20px;
      padding: 2.5rem;
      box-shadow: var(--card-shadow);
      border: 1px solid rgba(255, 255, 255, 0.2);
      position: relative;
      overflow: hidden;
    }

    .login-container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: var(--primary-gradient);
    }

    .brand-header {
      text-align: center;
      margin-bottom: 2rem;
    }

    .brand-icon {
      width: 60px;
      height: 60px;
      background: var(--primary-gradient);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 1rem;
      color: white;
      font-size: 1.5rem;
    }

    .brand-title {
      font-size: 1.75rem;
      font-weight: 700;
      color: #1f2937;
      margin: 0;
    }

    .brand-subtitle {
      color: #6b7280;
      font-size: 0.9rem;
      margin-top: 0.5rem;
    }

    .form-group {
      margin-bottom: 1.5rem;
      position: relative;
    }

    .form-label {
      font-weight: 600;
      color: #374151;
      margin-bottom: 0.5rem;
      font-size: 0.9rem;
    }

    .form-control {
      border: 2px solid #e5e7eb;
      border-radius: 12px;
      padding: 0.75rem 1rem;
      font-size: 1rem;
      transition: all 0.3s ease;
      background: #f9fafb;
    }

    .form-control:focus {
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
      background: white;
      outline: none;
    }

    .input-group {
      position: relative;
    }

    .input-icon {
      position: absolute;
      left: 1rem;
      top: 50%;
      transform: translateY(-50%);
      color: #6b7280;
      z-index: 10;
    }

    .form-control.with-icon {
      padding-left: 2.5rem;
    }

    .btn {
      border-radius: 12px;
      padding: 0.75rem 1.5rem;
      font-weight: 600;
      font-size: 1rem;
      transition: all 0.3s ease;
      border: none;
      position: relative;
      overflow: hidden;
    }

    .btn-primary {
      background: var(--primary-gradient);
      color: white;
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
    }

    .btn-success {
      background: var(--success-color);
      color: white;
    }

    .btn-success:hover {
      background: #059669;
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
    }

    .btn:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
    }

    .btn-loading {
      position: relative;
      color: transparent;
    }

    .btn-loading::after {
      content: '';
      position: absolute;
      width: 20px;
      height: 20px;
      top: 50%;
      left: 50%;
      margin-left: -10px;
      margin-top: -10px;
      border: 2px solid transparent;
      border-top: 2px solid currentColor;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .status-message {
      padding: 1rem;
      border-radius: 12px;
      margin-top: 1rem;
      font-weight: 500;
      text-align: center;
      transition: all 0.3s ease;
    }

    .status-success {
      background: rgba(16, 185, 129, 0.1);
      color: var(--success-color);
      border: 1px solid rgba(16, 185, 129, 0.2);
    }

    .status-error {
      background: rgba(239, 68, 68, 0.1);
      color: var(--error-color);
      border: 1px solid rgba(239, 68, 68, 0.2);
    }

    .status-warning {
      background: rgba(245, 158, 11, 0.1);
      color: var(--warning-color);
      border: 1px solid rgba(245, 158, 11, 0.2);
    }

    .recaptcha-container {
      margin: 1rem 0;
      display: flex;
      justify-content: center;
    }

    .step-indicator {
      display: flex;
      justify-content: center;
      margin-bottom: 2rem;
    }

    .step {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 0.5rem;
      font-size: 0.8rem;
      font-weight: 600;
      transition: all 0.3s ease;
    }

    .step.active {
      background: var(--primary-gradient);
      color: white;
    }

    .step.inactive {
      background: #e5e7eb;
      color: #6b7280;
    }

    .step.completed {
      background: var(--success-color);
      color: white;
    }

    .otp-section {
      display: none;
    }

    .otp-section.show {
      display: block;
      animation: fadeIn 0.3s ease;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .phone-hint {
      font-size: 0.8rem;
      color: #6b7280;
      margin-top: 0.5rem;
    }

    @media (max-width: 480px) {
      .login-container {
        padding: 2rem 1.5rem;
        margin: 10px;
      }
      
      .brand-title {
        font-size: 1.5rem;
      }
    }
  </style>
</head>
<body>

  <div class="login-container">
    <!-- Brand Header -->
    <div class="brand-header">
      <div class="brand-icon">
        <i class="bi bi-chat-dots"></i>
      </div>
      <h1 class="brand-title">ZappyChat</h1>
      <p class="brand-subtitle">Secure phone verification</p>
    </div>

    <!-- Step Indicator -->
    <div class="step-indicator">
      <div class="step active" id="step1">1</div>
      <div class="step inactive" id="step2">2</div>
    </div>

    <!-- Phone Number Section -->
    <div id="phoneSection">
      <div class="form-group">
        <label for="phoneNumber" class="form-label">Phone Number</label>
        <div class="input-group">
          <i class="bi bi-phone input-icon"></i>
          <input 
            type="tel" 
            id="phoneNumber" 
            class="form-control with-icon" 
            placeholder="+91 98765 43210"
            maxlength="15"
          >
        </div>
        <div class="phone-hint">
          <i class="bi bi-info-circle"></i>
          Enter your number with country code (e.g., +91 for India)
        </div>
      </div>

      <div class="recaptcha-container">
        <div id="recaptcha-container"></div>
      </div>

      <div class="d-grid">
        <button onclick="sendOTP()" class="btn btn-primary" id="sendOtpBtn">
          <i class="bi bi-send"></i>
          Send Verification Code
        </button>
      </div>
    </div>

    <!-- OTP Section -->
    <div id="otpSection" class="otp-section">
      <div class="form-group">
        <label for="otp" class="form-label">Verification Code</label>
        <div class="input-group">
          <i class="bi bi-shield-check input-icon"></i>
          <input 
            type="text" 
            id="otp" 
            class="form-control with-icon" 
            placeholder="Enter 6-digit code"
            maxlength="6"
            pattern="[0-9]{6}"
          >
        </div>
      </div>

      <div class="d-grid mb-3">
        <button onclick="verifyOTP()" class="btn btn-success" id="verifyOtpBtn">
          <i class="bi bi-check-circle"></i>
          Verify Code
        </button>
      </div>

      <div class="text-center">
        <button onclick="resendOTP()" class="btn btn-link" id="resendBtn">
          <i class="bi bi-arrow-clockwise"></i>
          Didn't receive code? Resend
        </button>
      </div>
    </div>

    <!-- Status Message -->
    <div id="statusMsg" class="status-message"></div>
  </div>

  <!-- Firebase Script Section -->
  <script>
    // Firebase config
    const firebaseConfig = {
      apiKey: "AIzaSyD62UVxeYLbbFIokNGKOWMViYhC8f7FMnM",
      authDomain: "chater-9feb8.firebaseapp.com",
      projectId: "chater-9feb8",
      storageBucket: "chater-9feb8.appspot.com",
      messagingSenderId: "862356468631",
      appId: "1:862356468631:web:3aedb845fa4199c37c0ad2",
      measurementId: "G-YRFXY5X8B6"
    };

    firebase.initializeApp(firebaseConfig);

    // Setup reCAPTCHA
    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {
      'size': 'normal'
    });

    let confirmationResult;

    function sendOTP() {
      const phoneNumber = document.getElementById('phoneNumber').value;
      const appVerifier = window.recaptchaVerifier;

      if (!phoneNumber.startsWith("+")) {
        document.getElementById('statusMsg').textContent = "‚ùå Please enter number with country code (+91...)";
        return;
      }

      firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)
        .then(result => {
          confirmationResult = result;
          document.getElementById('statusMsg').textContent = "‚úÖ OTP sent successfully!";
          document.getElementById('otpSection').classList.add("show");
          document.getElementById('step1').classList.remove("active");
          document.getElementById('step1').classList.add("completed");
          document.getElementById('step2').classList.add("active");
        })
        .catch(error => {
          document.getElementById('statusMsg').textContent = "‚ùå " + error.message;
        });
    }

    function verifyOTP() {
      const code = document.getElementById('otp').value;
      if (!code || code.length !== 6) {
        document.getElementById('statusMsg').textContent = "‚ùå Please enter a valid 6-digit code.";
        return;
      }

      confirmationResult.confirm(code)
        .then(result => {
          const user = result.user;
          document.getElementById('statusMsg').textContent = "‚úÖ Phone Verified: " + user.phoneNumber;

          // Send to backend (optional)
          fetch('/save-user', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              phone: user.phoneNumber,
              uid: user.uid
            })
          })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                showSuccessNotification(data.message)
                setTimeout(()=>{
                    window.location.href="/home"
                },1000)
              } else {
                showSuccessNotification(data.message)
              }
            })
            .catch(err => {
              showSuccessNotification(data.message)
            });
        })
        .catch(error => {
          document.getElementById('statusMsg').textContent = "‚ùå Invalid OTP. Try again.";
        });
    }

    function resendOTP() {
      document.getElementById('statusMsg').textContent = "üîÑ Resending OTP...";
      sendOTP(); // just calls the same function again
    }



    function showErrorNotification(message) {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #dc3545;
        color: white;
        padding: 15px 25px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        z-index: 1000;
        display: flex;
        align-items: center;
        gap: 10px;
        transform: translateX(100%);
        transition: transform 0.3s ease-out;
    `;
    
    notification.innerHTML = `
        <span class="error-icon">‚ö†Ô∏è</span>
        <span>${message}</span>
    `;
    
    document.body.appendChild(notification);
    
    requestAnimationFrame(() => {
        notification.style.transform = 'translateX(0)';
    });

    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => notification.remove(), 300);
    }, 3000);
}
function showSuccessNotification(message) {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #28a745;
        color: white;
        padding: 15px 25px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        z-index: 1000;
        display: flex;
        align-items: center;
        gap: 10px;
        transform: translateX(100%);
        transition: transform 0.3s ease-out;
    `;
    
    notification.innerHTML = `
        <span class="success-checkmark">‚úì</span>
        <span>${message}</span>
    `;
    
    document.body.appendChild(notification);
    
    requestAnimationFrame(() => {
        notification.style.transform = 'translateX(0)';
    });

    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => notification.remove(), 300);
    }, 3000);
}
  </script>

</body>
</html>
