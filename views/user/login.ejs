<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ZappyChat - Login</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family:
          'Inter',
          -apple-system,
          BlinkMacSystemFont,
          sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        overflow: hidden;
        position: relative;
      }

      /* Animated background elements */
      .bg-animation {
        position: absolute;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: 0;
      }

      .lightning-bolt {
        position: absolute;
        font-size: 2rem;
        color: rgba(255, 215, 0, 0.1);
        animation: float 6s ease-in-out infinite;
        pointer-events: none;
      }

      .lightning-bolt:nth-child(1) {
        top: 10%;
        left: 10%;
        animation-delay: 0s;
      }
      .lightning-bolt:nth-child(2) {
        top: 20%;
        right: 15%;
        animation-delay: 1s;
      }
      .lightning-bolt:nth-child(3) {
        bottom: 30%;
        left: 20%;
        animation-delay: 2s;
      }
      .lightning-bolt:nth-child(4) {
        bottom: 15%;
        right: 10%;
        animation-delay: 3s;
      }
      .lightning-bolt:nth-child(5) {
        top: 60%;
        left: 5%;
        animation-delay: 4s;
      }
      .lightning-bolt:nth-child(6) {
        top: 40%;
        right: 5%;
        animation-delay: 5s;
      }

      .login-container {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border-radius: 25px;
        padding: 50px 40px;
        width: 100%;
        max-width: 420px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        animation: slideInUp 0.8s ease-out;
        position: relative;
        z-index: 1;
      }

      .logo-section {
        text-align: center;
        margin-bottom: 40px;
      }

      .logo {
        font-size: 3rem;
        font-weight: 800;
        background: linear-gradient(45deg, #ffd700, #ffa500);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        text-shadow: 0 0 30px rgba(255, 215, 0, 0.5);
        margin-bottom: 10px;
        animation: glow 2s ease-in-out infinite alternate;
      }

      .welcome-text {
        color: rgba(255, 255, 255, 0.9);
        font-size: 1.1rem;
        margin-bottom: 5px;
      }

      .subtitle {
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.9rem;
      }

      .form-group {
        margin-bottom: 25px;
        position: relative;
      }

      .form-label {
        display: block;
        color: rgba(255, 255, 255, 0.8);
        font-weight: 500;
        margin-bottom: 8px;
        font-size: 0.9rem;
      }

      .form-input {
        width: 100%;
        padding: 15px 20px;
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        font-size: 1rem;
        outline: none;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
      }

      .form-input::placeholder {
        color: rgba(255, 255, 255, 0.5);
      }

      .form-input:focus {
        border-color: #ffd700;
        background: rgba(255, 255, 255, 0.15);
        box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);
        transform: translateY(-2px);
      }

      .form-input:valid {
        border-color: #4ade80;
      }

      .password-container {
        position: relative;
      }

      .password-toggle {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: rgba(255, 255, 255, 0.6);
        cursor: pointer;
        font-size: 1.2rem;
        transition: color 0.3s ease;
      }

      .password-toggle:hover {
        color: #ffd700;
      }

      .forgot-password {
        text-align: right;
        margin-bottom: 30px;
      }

      .forgot-password a {
        color: rgba(255, 255, 255, 0.7);
        text-decoration: none;
        font-size: 0.9rem;
        transition: color 0.3s ease;
      }

      .forgot-password a:hover {
        color: #ffd700;
      }

      .login-button {
        width: 100%;
        padding: 16px;
        background: linear-gradient(135deg, #ffd700, #ffa500);
        border: none;
        border-radius: 15px;
        color: #333;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        box-shadow: 0 10px 30px rgba(255, 165, 0, 0.3);
        position: relative;
        overflow: hidden;
      }

      .login-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 15px 40px rgba(255, 165, 0, 0.5);
      }

      .login-button:active {
        transform: translateY(-1px);
      }

      .login-button.loading {
        pointer-events: none;
      }

      .login-button .spinner {
        display: none;
        width: 20px;
        height: 20px;
        border: 2px solid #333;
        border-top: 2px solid transparent;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-right: 10px;
      }

      .divider {
        display: flex;
        align-items: center;
        margin: 30px 0;
      }

      .divider::before,
      .divider::after {
        content: '';
        flex: 1;
        height: 1px;
        background: rgba(255, 255, 255, 0.3);
      }

      .divider span {
        color: rgba(255, 255, 255, 0.6);
        padding: 0 20px;
        font-size: 0.9rem;
      }

      .social-login {
        display: flex;
        gap: 15px;
        margin-bottom: 30px;
      }

      .social-button {
        flex: 1;
        padding: 12px;
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        backdrop-filter: blur(10px);
      }

      .social-button:hover {
        border-color: rgba(255, 255, 255, 0.4);
        background: rgba(255, 255, 255, 0.15);
        transform: translateY(-2px);
      }

      .signup-link {
        text-align: center;
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.95rem;
      }

      .signup-link a {
        color: #ffd700;
        text-decoration: none;
        font-weight: 600;
        transition: color 0.3s ease;
      }

      .signup-link a:hover {
        color: #ffa500;
      }

      .success-message {
        background: rgba(74, 222, 128, 0.2);
        border: 1px solid rgba(74, 222, 128, 0.3);
        color: #4ade80;
        padding: 12px 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        text-align: center;
        display: none;
        animation: slideInDown 0.5s ease-out;
      }

      .error-message {
        background: rgba(239, 68, 68, 0.2);
        border: 1px solid rgba(239, 68, 68, 0.3);
        color: #ef4444;
        padding: 12px 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        text-align: center;
        display: none;
        animation: shake 0.5s ease-out;
      }

      @keyframes slideInUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes slideInDown {
        from {
          opacity: 0;
          transform: translateY(-20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes float {
        0%,
        100% {
          transform: translateY(0px) rotate(0deg);
        }
        50% {
          transform: translateY(-20px) rotate(180deg);
        }
      }

      @keyframes glow {
        0% {
          text-shadow: 0 0 30px rgba(255, 215, 0, 0.5);
        }
        100% {
          text-shadow:
            0 0 40px rgba(255, 215, 0, 0.8),
            0 0 60px rgba(255, 215, 0, 0.3);
        }
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }

      @keyframes shake {
        0%,
        100% {
          transform: translateX(0);
        }
        25% {
          transform: translateX(-5px);
        }
        75% {
          transform: translateX(5px);
        }
      }

      @media (max-width: 480px) {
        .login-container {
          padding: 40px 30px;
          margin: 10px;
        }
        .logo {
          font-size: 2.5rem;
        }
        .social-login {
          flex-direction: column;
        }
      }
    </style>
  </head>
  <body>
    <div class="bg-animation">
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
    </div>

    <div class="login-container">
      <div class="logo-section">
        <div class="logo">⚡ ZappyChat</div>
        <div class="welcome-text">Welcome Back!</div>
        <div class="subtitle">Lightning-fast connections await</div>
      </div>

      <div class="success-message" id="successMessage">
        ✓ Login successful! Redirecting to your chats...
      </div>

      <div class="error-message" id="errorMessage">
        ✗ Invalid credentials. Please try again.
      </div>

      <form id="loginForm">
        <div class="form-group">
          <label class="form-label" for="email">Email or Username</label>
          <input
            type="email"
            id="email"
            class="form-input"
            placeholder="Enter your email or username"
            required
          />
        </div>

        <div class="form-group">
          <label class="form-label" for="password">Password</label>
          <div class="password-container">
            <input
              type="password"
              id="password"
              class="form-input"
              placeholder="Enter your password"
              required
            />
            <button type="button" class="password-toggle" id="passwordToggle">
              👁️
            </button>
          </div>
        </div>

        <div class="forgot-password">
          <a href="#" onclick="showForgotPassword()">Forgot Password?</a>
        </div>

        <button type="submit" class="login-button" id="loginButton">
          <div class="spinner" id="spinner"></div>
          <span id="buttonText">Login to ZappyChat</span>
        </button>
      </form>

      <div class="divider">
        <span>or continue with</span>
      </div>

      <!-- <div class="social-login">
        <button class="social-button" onclick="socialLogin('google')">
          🔍
        </button>
      </div> -->

      <div class="signup-link">
        Don't have an account?
        <a href="#" onclick="showSignup()">Sign up here</a>
      </div>
    </div>

    <script>
      const loginForm = document.getElementById('loginForm');
      const loginButton = document.getElementById('loginButton');
      const spinner = document.getElementById('spinner');
      const buttonText = document.getElementById('buttonText');
      const passwordToggle = document.getElementById('passwordToggle');
      const passwordInput = document.getElementById('password');
      const successMessage = document.getElementById('successMessage');
      const errorMessage = document.getElementById('errorMessage');

      // Password visibility toggle
      passwordToggle.addEventListener('click', () => {
        const type =
          passwordInput.getAttribute('type') === 'password'
            ? 'text'
            : 'password';
        passwordInput.setAttribute('type', type);
        passwordToggle.textContent = type === 'password' ? '👁️' : '🙈';
      });

      // Form validation
      function validateForm() {
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;

        return email.length > 0 && password.length >= 6;
      }

      // Show loading state
      function showLoading() {
        loginButton.classList.add('loading');
        spinner.style.display = 'inline-block';
        buttonText.textContent = 'Logging in...';
        loginButton.disabled = true;
      }

      // Hide loading state
      function hideLoading() {
        loginButton.classList.remove('loading');
        spinner.style.display = 'none';
        buttonText.textContent = 'Login to ZappyChat';
        loginButton.disabled = false;
      }

      // Show success message
      function showSuccess() {
        errorMessage.style.display = 'none';
        successMessage.style.display = 'block';

        setTimeout(() => {
          // Simulate redirect to main chat
          window.location.href = '#dashboard';
        }, 2000);
      }

      // Show error message
      function showError() {
        successMessage.style.display = 'none';
        errorMessage.style.display = 'block';

        setTimeout(() => {
          errorMessage.style.display = 'none';
        }, 3000);
      }

      // Handle form submission
      loginForm.addEventListener('submit', (e) => {
        e.preventDefault();

        if (!validateForm()) {
          showError();
          return;
        }

        showLoading();

        // Simulate API call
        setTimeout(() => {
          hideLoading();

          // Demo: Show success for any valid email/password combo
          const email = document.getElementById('email').value;
          if (email.includes('@') || email.length > 3) {
            showSuccess();
          } else {
            showError();
          }
        }, 2000);
      });

      // Social login handlers
      function socialLogin(provider) {
        showLoading();

        setTimeout(() => {
          hideLoading();
          showSuccess();
        }, 1500);
      }

      function showForgotPassword() {
        alert(
          'Forgot Password feature coming soon! ⚡\n\nFor now, try any email with a password of 6+ characters to demo the login.'
        );
      }

      function showSignup() {
        alert(
          'Sign up feature coming soon! ⚡\n\nFor now, you can demo the login with any email and password combination.'
        );
      }

      // Real-time validation feedback
      document.getElementById('email').addEventListener('input', (e) => {
        const input = e.target;
        if (input.value.includes('@') || input.value.length > 3) {
          input.style.borderColor = '#4ade80';
        } else {
          input.style.borderColor = 'rgba(255, 255, 255, 0.2)';
        }
      });

      document.getElementById('password').addEventListener('input', (e) => {
        const input = e.target;
        if (input.value.length >= 6) {
          input.style.borderColor = '#4ade80';
        } else {
          input.style.borderColor = 'rgba(255, 255, 255, 0.2)';
        }
      });

      // Demo helper
      setTimeout(() => {
        console.log(
          '💡 Demo tip: Use any email format and password with 6+ characters to test the login flow!'
        );
      }, 3000);

      function showSignup(){
    window.location.href = "/signup";
    }
    </script>
  </body>
</html>
