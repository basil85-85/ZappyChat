<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ZappyChat - Login</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family:
          'Inter',
          -apple-system,
          BlinkMacSystemFont,
          sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
        overflow: hidden;
        position: relative;
      }

      /* Animated background elements */
      .bg-animation {
        position: absolute;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: 0;
      }

      .lightning-bolt {
        position: absolute;
        font-size: 2rem;
        color: rgba(255, 215, 0, 0.1);
        animation: float 6s ease-in-out infinite;
        pointer-events: none;
      }

      .lightning-bolt:nth-child(1) {
        top: 10%;
        left: 10%;
        animation-delay: 0s;
      }
      .lightning-bolt:nth-child(2) {
        top: 20%;
        right: 15%;
        animation-delay: 1s;
      }
      .lightning-bolt:nth-child(3) {
        bottom: 30%;
        left: 20%;
        animation-delay: 2s;
      }
      .lightning-bolt:nth-child(4) {
        bottom: 15%;
        right: 10%;
        animation-delay: 3s;
      }
      .lightning-bolt:nth-child(5) {
        top: 60%;
        left: 5%;
        animation-delay: 4s;
      }
      .lightning-bolt:nth-child(6) {
        top: 40%;
        right: 5%;
        animation-delay: 5s;
      }

      .login-container {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border-radius: 25px;
        padding: 50px 40px;
        width: 100%;
        max-width: 420px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        animation: slideInUp 0.8s ease-out;
        position: relative;
        z-index: 1;
      }

      .logo-section {
        text-align: center;
        margin-bottom: 40px;
      }

      .logo {
        font-size: 3rem;
        font-weight: 800;
        background: linear-gradient(45deg, #ffd700, #ffa500);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        text-shadow: 0 0 30px rgba(255, 215, 0, 0.5);
        margin-bottom: 10px;
        animation: glow 2s ease-in-out infinite alternate;
      }

      .welcome-text {
        color: rgba(255, 255, 255, 0.9);
        font-size: 1.1rem;
        margin-bottom: 5px;
      }

      .subtitle {
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.9rem;
      }

      .form-group {
        margin-bottom: 25px;
        position: relative;
      }

      .form-label {
        display: block;
        color: rgba(255, 255, 255, 0.8);
        font-weight: 500;
        margin-bottom: 8px;
        font-size: 0.9rem;
      }

      .form-input {
        width: 100%;
        padding: 15px 20px;
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 15px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        font-size: 1rem;
        outline: none;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
      }

      .form-input::placeholder {
        color: rgba(255, 255, 255, 0.5);
      }

      .form-input:focus {
        border-color: #ffd700;
        background: rgba(255, 255, 255, 0.15);
        box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);
        transform: translateY(-2px);
      }

      .form-input:valid {
        border-color: #4ade80;
      }

      .password-container {
        position: relative;
      }

      .password-toggle {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: rgba(255, 255, 255, 0.6);
        cursor: pointer;
        font-size: 1.2rem;
        transition: color 0.3s ease;
      }

      .password-toggle:hover {
        color: #ffd700;
      }

      .forgot-password {
        text-align: right;
        margin-bottom: 30px;
      }

      .forgot-password a {
        color: rgba(255, 255, 255, 0.7);
        text-decoration: none;
        font-size: 0.9rem;
        transition: color 0.3s ease;
      }

      .forgot-password a:hover {
        color: #ffd700;
      }

      .login-button {
        width: 100%;
        padding: 16px;
        background: linear-gradient(135deg, #ffd700, #ffa500);
        border: none;
        border-radius: 15px;
        color: #333;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        box-shadow: 0 10px 30px rgba(255, 165, 0, 0.3);
        position: relative;
        overflow: hidden;
      }

      .login-button:hover {
        transform: translateY(-3px);
        box-shadow: 0 15px 40px rgba(255, 165, 0, 0.5);
      }

      .login-button:active {
        transform: translateY(-1px);
      }

      .login-button.loading {
        pointer-events: none;
      }

      .login-button .spinner {
        display: none;
        width: 20px;
        height: 20px;
        border: 2px solid #333;
        border-top: 2px solid transparent;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-right: 10px;
      }

      .divider {
        display: flex;
        align-items: center;
        margin: 30px 0;
      }

      .divider::before,
      .divider::after {
        content: '';
        flex: 1;
        height: 1px;
        background: rgba(255, 255, 255, 0.3);
      }

      .divider span {
        color: rgba(255, 255, 255, 0.6);
        padding: 0 20px;
        font-size: 0.9rem;
      }

      .social-login {
        display: flex;
        gap: 15px;
        margin-bottom: 30px;
      }

      .social-button {
        flex: 1;
        padding: 12px;
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        backdrop-filter: blur(10px);
      }

      .social-button:hover {
        border-color: rgba(255, 255, 255, 0.4);
        background: rgba(255, 255, 255, 0.15);
        transform: translateY(-2px);
      }

      .signup-link {
        text-align: center;
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.95rem;
      }

      .signup-link a {
        color: #ffd700;
        text-decoration: none;
        font-weight: 600;
        transition: color 0.3s ease;
      }

      .signup-link a:hover {
        color: #ffa500;
      }

      .success-message {
        background: rgba(74, 222, 128, 0.2);
        border: 1px solid rgba(74, 222, 128, 0.3);
        color: #4ade80;
        padding: 12px 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        text-align: center;
        display: none;
        animation: slideInDown 0.5s ease-out;
      }

      .error-message {
        background: rgba(239, 68, 68, 0.2);
        border: 1px solid rgba(239, 68, 68, 0.3);
        color: #ef4444;
        padding: 12px 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        text-align: center;
        display: none;
        animation: shake 0.5s ease-out;
      }

      @keyframes slideInUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes slideInDown {
        from {
          opacity: 0;
          transform: translateY(-20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes float {
        0%,
        100% {
          transform: translateY(0px) rotate(0deg);
        }
        50% {
          transform: translateY(-20px) rotate(180deg);
        }
      }

      @keyframes glow {
        0% {
          text-shadow: 0 0 30px rgba(255, 215, 0, 0.5);
        }
        100% {
          text-shadow:
            0 0 40px rgba(255, 215, 0, 0.8),
            0 0 60px rgba(255, 215, 0, 0.3);
        }
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }

      @keyframes shake {
        0%,
        100% {
          transform: translateX(0);
        }
        25% {
          transform: translateX(-5px);
        }
        75% {
          transform: translateX(5px);
        }
      }

      @media (max-width: 480px) {
        .login-container {
          padding: 40px 30px;
          margin: 10px;
        }
        .logo {
          font-size: 2.5rem;
        }
        .social-login {
          flex-direction: column;
        }
      }
    </style>
  </head>
  <body>
    <div class="bg-animation">
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
      <div class="lightning-bolt">⚡</div>
    </div>

    <div class="login-container">
      <div class="logo-section">
        <div class="logo">⚡ ZappyChat</div>
        <div class="welcome-text">Welcome Back!</div>
        <div class="subtitle">Lightning-fast connections await</div>
      </div>

      <div class="success-message" id="successMessage">
        ✓ Login successful! Redirecting to your chats...
      </div>

      <div class="error-message" id="errorMessage">
        ✗ Invalid credentials. Please try again.
      </div>

      <form id="loginForm">
       <div class="form-group">
          <label class="form-label" for="loginInput">Phone Number or Username</label>
          <input
            type="text"
            id="loginInput"
            class="form-input"
            placeholder="Enter your phone number or username"
            required
          />
        </div>

        <div class="form-group">
          <label class="form-label" for="password">Password</label>
          <div class="password-container">
            <input
              type="password"
              id="password"
              class="form-input"
              placeholder="Enter your password"
              required
            />
            <button type="button" class="password-toggle" id="passwordToggle">
              👁️
            </button>
          </div>
        </div>

        <div class="forgot-password">
          <a href="#" onclick="showForgotPassword()">Forgot Password?</a>
        </div>

        <button type="submit" class="login-button" id="loginButton">
          <div class="spinner" id="spinner"></div>
          <span id="buttonText">Login to ZappyChat</span>
        </button>
      </form>

      <div class="divider">
        <span>or continue with</span>
      </div>

      <!-- <div class="social-login">
        <button class="social-button" onclick="socialLogin('google')">
          🔍
        </button>
      </div> -->

      <div class="signup-link">
        Don't have an account?
        <a href="#" onclick="showSignup()">Sign up here</a>
      </div>
    </div>

    <script>
    const loginForm = document.getElementById('loginForm');
    const loginButton = document.getElementById('loginButton');
    const spinner = document.getElementById('spinner');
    const buttonText = document.getElementById('buttonText');
    const passwordToggle = document.getElementById('passwordToggle');
    const passwordInput = document.getElementById('password');
    const successMessage = document.getElementById('successMessage') || document.createElement('div');
    const errorMessage = document.getElementById('errorMessage') || document.createElement('div');

    const hints = {
      lengthHint: password => password.length >= 8,
      uppercaseHint: password => /[A-Z]/.test(password),
      numberHint: password => /\d/.test(password),
      specialHint: password => /[^A-Za-z0-9]/.test(password)
    };

    // Password toggle 👁️/🙈
    passwordToggle.addEventListener('click', () => {
      const type = passwordInput.type === 'password' ? 'text' : 'password';
      passwordInput.type = type;
      passwordToggle.textContent = type === 'password' ? '👁️' : '🙈';
    });

    // Validate password
    function validateForm() {
      const usernameOrPhone = document.getElementById('loginInput').value;
      const password = document.getElementById('password').value;

      const results = {
        length: hints.lengthHint(password),
        uppercase: hints.uppercaseHint(password),
        number: hints.numberHint(password),
        special: hints.specialHint(password)
      };

      const isValid = Object.values(results).every(Boolean);
      return isValid;
    }

    // Loading states
    function showLoading() {
      loginButton.classList.add('loading');
      spinner.style.display = 'inline-block';
      buttonText.textContent = 'Logging in...';
      loginButton.disabled = true;
    }

    function hideLoading() {
      loginButton.classList.remove('loading');
      spinner.style.display = 'none';
      buttonText.textContent = 'Login to ZappyChat';
      loginButton.disabled = false;
    }

    // Show success/error
    function showSuccess() {
      errorMessage.style.display = 'none';
      successMessage.style.display = 'block';
      successMessage.textContent = "✅ Login successful!";
      setTimeout(() => {
        window.location.href = '#dashboard';
      }, 2000);
    }

    function showError() {
      successMessage.style.display = 'none';
      errorMessage.style.display = 'block';
      errorMessage.textContent = "❌ Invalid login or password.";
      setTimeout(() => {
        errorMessage.style.display = 'none';
      }, 3000);
    }

    // Form submit
    loginForm.addEventListener('submit', (e) => {
      e.preventDefault();

      if (!validateForm()) {
        showError();
        return;
      }

      showLoading();
      const fromdata = { 
        usernamephone : document.getElementById("loginInput").value,
        password : document.getElementById("password").value
      }

     backend(fromdata)
    });

    // Real-time password border feedback
    passwordInput.addEventListener('input', (e) => {
      const value = e.target.value;
      e.target.style.borderColor = value.length >= 6 ? '#4ade80' : 'rgba(255, 255, 255, 0.2)';
    });

    // Navigation
    function showSignup() {
      window.location.href = "/signup";
    }

    function showForgotPassword() {
      alert("Forgot password feature coming soon!");
    }
   

async function backend(params) {
  try {
    const response = await fetch('/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(params)
    });
      hideLoading();
    const data = await response.json();

    if (!response.ok) {
    showErrorNotification(data.message || 'Something went wrong')
    }
    if(data.success){
      showSuccessNotification(data.message );
      setTimeout(()=>{
        window.location.href= "/home"
      },1000)
    }else{
      showErrorNotification(data.message)
    }
    

  } catch (error) {
    showErrorNotification('❌ ' + error.message);
  }
}





 function showErrorNotification(message) {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #dc3545;
        color: white;
        padding: 15px 25px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        z-index: 1000;
        display: flex;
        align-items: center;
        gap: 10px;
        transform: translateX(100%);
        transition: transform 0.3s ease-out;
    `;
    
    notification.innerHTML = `
        <span class="error-icon">⚠️</span>
        <span>${message}</span>
    `;
    
    document.body.appendChild(notification);
    
    requestAnimationFrame(() => {
        notification.style.transform = 'translateX(0)';
    });

    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => notification.remove(), 300);
    }, 3000);
}
function showSuccessNotification(message) {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: #28a745;
        color: white;
        padding: 15px 25px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        z-index: 1000;
        display: flex;
        align-items: center;
        gap: 10px;
        transform: translateX(100%);
        transition: transform 0.3s ease-out;
    `;
    
    notification.innerHTML = `
        <span class="success-checkmark">✓</span>
        <span>${message}</span>
    `;
    
    document.body.appendChild(notification);
    
    requestAnimationFrame(() => {
        notification.style.transform = 'translateX(0)';
    });

    setTimeout(() => {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => notification.remove(), 300);
    }, 3000);
}
    </script>
  </body>
</html>
