<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>404 - Page Not Found | ZappyChat</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #333;
            overflow: hidden;
        }

        .container {
            text-align: center;
            max-width: 600px;
            padding: 40px 20px;
            position: relative;
            z-index: 2;
        }

        .error-animation {
            position: relative;
            margin-bottom: 30px;
        }

        .error-number {
            font-size: 10rem;
            font-weight: bold;
            color: rgba(255, 255, 255, 0.2);
            text-shadow: 0 0 100px rgba(255, 255, 255, 0.1);
            animation: float 3s ease-in-out infinite;
            line-height: 1;
        }

        .zappy-icon {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 4rem;
            animation: zap 2s ease-in-out infinite;
        }

        .error-message {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 30px 60px rgba(0, 0, 0, 0.2);
            margin-bottom: 30px;
            animation: slideUp 0.8s ease-out;
        }

        .error-title {
            font-size: 2.5rem;
            color: #4c63d2;
            margin-bottom: 15px;
            font-weight: bold;
        }

        .error-subtitle {
            font-size: 1.2rem;
            color: #666;
            margin-bottom: 25px;
            line-height: 1.6;
        }

        .error-description {
            color: #888;
            margin-bottom: 30px;
            font-size: 1rem;
            line-height: 1.5;
        }

        .action-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
            margin-bottom: 30px;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            transition: all 0.3s ease;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

        .btn-primary {
            background: #4c63d2;
            color: white;
        }

        .btn-primary:hover {
            background: #3b4fcf;
            transform: translateY(-3px);
            box-shadow: 0 15px 30px rgba(76, 99, 210, 0.4);
        }

        .btn-secondary {
            background: #17a2b8;
            color: white;
        }

        .btn-secondary:hover {
            background: #138496;
            transform: translateY(-3px);
            box-shadow: 0 15px 30px rgba(23, 162, 184, 0.4);
        }

        .btn-outline {
            background: transparent;
            color: #4c63d2;
            border: 2px solid #4c63d2;
        }

        .btn-outline:hover {
            background: #4c63d2;
            color: white;
            transform: translateY(-3px);
        }

        .suggestions {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            margin-top: 20px;
        }

        .suggestions h3 {
            color: white;
            margin-bottom: 15px;
            font-size: 1.3rem;
        }

        .suggestion-links {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .suggestion-link {
            color: rgba(255, 255, 255, 0.9);
            text-decoration: none;
            padding: 10px 15px;
            border-radius: 10px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .suggestion-link:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateX(10px);
        }

        .floating-elements {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .floating-chat {
            position: absolute;
            font-size: 2rem;
            opacity: 0.1;
            animation: floatAround 15s linear infinite;
        }

        .floating-chat:nth-child(1) {
            top: 10%;
            left: 10%;
            animation-delay: 0s;
        }

        .floating-chat:nth-child(2) {
            top: 20%;
            right: 10%;
            animation-delay: -3s;
        }

        .floating-chat:nth-child(3) {
            bottom: 30%;
            left: 15%;
            animation-delay: -6s;
        }

        .floating-chat:nth-child(4) {
            bottom: 20%;
            right: 20%;
            animation-delay: -9s;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
        }

        @keyframes zap {
            0%, 100% { transform: translate(-50%, -50%) scale(1); }
            50% { transform: translate(-50%, -50%) scale(1.2); }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes floatAround {
            0% { transform: translate(0, 0) rotate(0deg); }
            25% { transform: translate(50px, -30px) rotate(90deg); }
            50% { transform: translate(-20px, -50px) rotate(180deg); }
            75% { transform: translate(-40px, 20px) rotate(270deg); }
            100% { transform: translate(0, 0) rotate(360deg); }
        }

        @media (max-width: 768px) {
            .error-number {
                font-size: 6rem;
            }

            .zappy-icon {
                font-size: 2.5rem;
            }

            .error-title {
                font-size: 2rem;
            }

            .error-message {
                padding: 30px 20px;
            }

            .action-buttons {
                flex-direction: column;
                align-items: center;
            }

            .btn {
                width: 100%;
                max-width: 250px;
                justify-content: center;
            }
        }

        .icon {
            width: 20px;
            height: 20px;
        }
    </style>
</head>
<body>
    <div class="floating-elements">
        <div class="floating-chat">üí¨</div>
        <div class="floating-chat">‚ö°</div>
        <div class="floating-chat">üë•</div>
        <div class="floating-chat">üîç</div>
    </div>

    <div class="container">
        <div class="error-animation">
            <div class="error-number">404</div>
            <div class="zappy-icon">‚ö°</div>
        </div>

        <div class="error-message">
            <h1 class="error-title">Oops! Page Not Found</h1>
            <p class="error-subtitle">The page you're looking for seems to have gone offline</p>
            <p class="error-description">
                Don't worry! Even the best chat apps sometimes lose track of a page or two. 
                Let's get you back to connecting with your friends.
            </p>

            <div class="action-buttons">
                <a href="#" class="btn btn-primary" onclick="goHome()">
                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
                    </svg>
                    Go Home
                </a>

                <button class="btn btn-secondary" onclick="goBack()">
                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"></path>
                    </svg>
                    Go Back
                </button>

                <button class="btn btn-outline" onclick="reportIssue()">
                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
                    </svg>
                    Report Issue
                </button>
            </div>
        </div>

        <div class="suggestions">
            <h3>Popular Pages</h3>
            <div class="suggestion-links">
                <a href="#" class="suggestion-link" onclick="navigateTo('friends')">
                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"></path>
                    </svg>
                    Find Friends
                </a>
                <a href="#" class="suggestion-link" onclick="navigateTo('messages')">
                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7z"></path>
                    </svg>
                    Messages
                </a>
                <a href="#" class="suggestion-link" onclick="navigateTo('profile')">
                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                    </svg>
                    My Profile
                </a>
                <a href="#" class="suggestion-link" onclick="navigateTo('settings')">
                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd"></path>
                    </svg>
                    Settings
                </a>
            </div>
        </div>
    </div>

    <script>
        function goHome() {
            showNotification('Redirecting to homepage...', 'info');
            // Simulate navigation
            setTimeout(() => {
                // window.location.href = '/';
                showNotification('Homepage loaded!', 'success');
            }, 1000);
        }

        function goBack() {
            if (window.history.length > 1) {
                window.history.back();
            } else {
                goHome();
            }
        }

        function reportIssue() {
            showNotification('Thank you! Issue reported to our team.', 'success');
        }

        function navigateTo(page) {
            showNotification(`Navigating to ${page}...`, 'info');
            // Simulate navigation
            setTimeout(() => {
                showNotification(`${page.charAt(0).toUpperCase() + page.slice(1)} page loaded!`, 'success');
            }, 800);
        }

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 15px 20px;
                background: ${type === 'success' ? '#28a745' : type === 'info' ? '#17a2b8' : '#dc3545'};
                color: white;
                border-radius: 10px;
                box-shadow: 0 10px 20px rgba(0,0,0,0.2);
                z-index: 1000;
                animation: slideDown 0.5s ease-out;
                font-weight: 500;
            `;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.animation = 'slideDown 0.5s ease-out reverse';
                setTimeout(() => notification.remove(), 500);
            }, 3000);
        }

        // Add CSS for notification animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideDown {
                from {
                    opacity: 0;
                    transform: translateY(-50px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }
        `;
        document.head.appendChild(style);

        // Add some interactive elements on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Add subtle shake animation to the 404 number when clicked
            const errorNumber = document.querySelector('.error-number');
            errorNumber.addEventListener('click', function() {
                this.style.animation = 'none';
                setTimeout(() => {
                    this.style.animation = 'float 3s ease-in-out infinite';
                }, 100);
                showNotification('Still lost? Try the navigation buttons below!', 'info');
            });

            // Add hover effect to floating elements
            const floatingElements = document.querySelectorAll('.floating-chat');
            floatingElements.forEach(element => {
                element.addEventListener('mouseenter', function() {
                    this.style.fontSize = '3rem';
                    this.style.opacity = '0.3';
                });
                element.addEventListener('mouseleave', function() {
                    this.style.fontSize = '2rem';
                    this.style.opacity = '0.1';
                });
            });
        });
    </script>
</body>
</html>